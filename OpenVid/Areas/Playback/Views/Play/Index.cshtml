@model OpenVid.Areas.Playback.Models.Play.PlayViewModel
@{
    ViewBag.Title = Model.Update.Name;
    ViewBag.SearchString = Model.SearchString;

}
<div class="video-container">
    <div class="youtube-theme" >
        <video id="youtube-theme" data-shaka-player autostart></video>
    </div>

    <script>
        async function getUrl() {
            const support = await shaka.Player.probeSupport();
            @if (Model.VideoSources.ContainsKey("mpd"))
            {
                <text>
                if (support.manifest.mpd)
                {
                    return '@Model.VideoSources["mpd"]';
            }
                </text>
            }
            @if (Model.VideoSources.ContainsKey("m3u8"))
            {
                <text>
                if (support.manifest.m3u8)
                {
                    return '@Model.VideoSources["m3u8"]';
                }
                </text>
            }
            @if (Model.VideoSources.ContainsKey("mp4"))
            {
                <text>
                return '@Model.VideoSources["mp4"]';
                </text>
            }
            else if (Model.VideoSources.ContainsKey("webm")) {
                <text>
                    return '@Model.VideoSources["webm"]';
                </text>
            }
            else {
                <text>
                    return '';
                </text>
            }
        }

        async function init() {
            const video = document.getElementById('youtube-theme');
            const ui = video['ui'];
            const config = {
                'seekBarColors': {
                    base: 'rgba(255,255,255,.2)',
                    buffered: 'rgba(255,255,255,.4)',
                    played: 'rgb(255,0,0)',
                },
                'castReceiverAppId': '07AEE832',
            }
            ui.configure(config);

            const controls = ui.getControls();
            const player = controls.getPlayer();

            try {
                await player.load(await getUrl());
            } catch (error) {
            }

            $('.shaka-overflow-menu-button').html('settings');
            $('.shaka-back-to-overflow-button .material-icons-round').html('arrow_back_ios_new');
        }
        document.addEventListener('shaka-ui-loaded', init);
    </script>



</div>

<div class="container">
    @{
        await Html.RenderPartialAsync("_UpdateForm", Model.Update);
    }
</div>
