@model OpenVid.Areas.Playback.Models.Play.PlayViewModel
@{
    ViewBag.Title = Model.Update.Name;
    ViewBag.SearchString = Model.SearchString;
}
<div class="video-container">
    @if (Model.VideoSources.Any(s => s.Contains("_.mpd")))
    {
        <div class="dash-video-player ">
            <div class="videoContainer" id="videoContainer">
                <video preload="auto" height="720"></video>
                <div id="videoController" class="video-controller unselectable">
                    <div id="playPauseBtn" class="btn-play-pause" title="Play/Pause">
                        <span id="iconPlayPause" class="icon-play"></span>
                    </div>
                    <span id="videoTime" class="time-display">00:00:00</span>
                    <div id="fullscreenBtn" class="btn-fullscreen control-icon-layout" title="Fullscreen">
                        <span class="icon-fullscreen-enter"></span>
                    </div>
                    <div id="bitrateListBtn" class="control-icon-layout" title="Bitrate List">
                        <span class="icon-bitrate"></span>
                    </div>
                    <input type="range" id="volumebar" class="volumebar" value="1" min="0" max="1" step=".01">
                    <div id="muteBtn" class="btn-mute control-icon-layout" title="Mute">
                        <span id="iconMute" class="icon-mute-off"></span>
                    </div>
                    <div id="trackSwitchBtn" class="control-icon-layout" title="A/V Tracks">
                        <span class="icon-tracks"></span>
                    </div>
                    <div id="captionBtn" class="btn-caption control-icon-layout" title="Closed Caption">
                        <span class="icon-caption"></span>
                    </div>
                    <span id="videoDuration" class="duration-display">00:00:00</span>
                    <div class="seekContainer">
                        <div id="seekbar" class="seekbar seekbar-complete">
                            <div id="seekbar-buffer" class="seekbar seekbar-buffer"></div>
                            <div id="seekbar-play" class="seekbar seekbar-play"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/dashjs/4.4.1/dash.all.min.js"></script>
        <script src="~/lib/dashjs/akamai/ControlBar.js"></script>
        <link rel="stylesheet" href="~/lib/dashjs/akamai/controlbar.css">
        <script>
            (function () {
                var url = 'http://cdn.qvvz.uk/test/h264.mpd';
                //var url = 'http://atlas:81/video/f1/f1681e8558959f56bb4ca924ac7be711.mp4';
                var videoElement = document.querySelector('.videoContainer video');
                var player = dashjs.MediaPlayer().create();

                player.initialize(videoElement, url, true);
                var controlbar = new ControlBar(player);
                controlbar.initialize();
            })();
        </script>
    }
    else if (Model.VideoSources.Any(s => s.Contains(".mpd")))
    {
        <section id="wrap">
            <div class="youtube-theme">
                <video id="youtube-theme" data-shaka-player height="720" autostart></video>
            </div>
        </section>

        <script>
            var url = 'http://cdn.qvvz.uk/test/h264.mpd';
            //var url = 'http://atlas:81/video/f1/f1681e8558959f56bb4ca924ac7be711.mp4';

            async function init() {
                const video = document.getElementById('youtube-theme');
                const ui = video['ui'];
                const config = {
                    'seekBarColors': {
                        base: 'rgba(255,255,255,.2)',
                        buffered: 'rgba(255,255,255,.4)',
                        played: 'rgb(255,0,0)',
                    }
                }
                ui.configure(config);

                const controls = ui.getControls();
                const player = controls.getPlayer();

                try {
                    await player.load(url);
                } catch (error) {
                }

                // TODO find a way to do this without jquery. -___- or find a way to replace them CSS. maybe usering :after  
                $('.shaka-overflow-menu-button').html('settings');
                $('.shaka-back-to-overflow-button .material-icons-round').html('arrow_back_ios_new');
            }
            document.addEventListener('shaka-ui-loaded', init);
        </script>
    }
    else
    {
        <video height="720" controls>
            @foreach (var source in Model.VideoSources)
            {
                <source src="@source" type="video/mp4">
            }
            Your browser does not support the video tag.
        </video>
    }



</div>

<div class="container">
    @{await Html.RenderPartialAsync("_UpdateForm", Model.Update);}
</div>
