@model OpenVid.Models.Upload.UpdateFormViewModel
<form class="col-4" method="post" action="@Url.Action("Update", "Upload")">
    @if (Model.IsFlaggedForDeletion)
    {
        <div class="form-group">
            <div class="alert alert-danger">FLAGGED FOR DELETION</div>
        </div>
    }
    <div class="form-group">
        <label>Video Name:</label>
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.HiddenFor(m => m.Md5)
        MD5: @Model.Md5 <a href="@Url.Action("Index", "Play", new { md5 = Model.Md5 })">[View]</a>
        <br />
        Dimensions: @(Model.Width)x@(Model.Height)
        <br />
        Size:  @((Model.Size/1024)/1024)MB
    </div>
    <div class="form-group">
        <label>Tags:</label>
        @Html.TextBoxFor(m => m.Tags, new { @class = "form-control", style = "word-break: break-word;" })
    </div>
    <div class="form-group">
        <label>Description:</label>
        @Html.TextBoxFor(m => m.Description, new { @class = "form-control", style = "word-break: break-word;" })
    </div>
    <div class="form-group">
        <label>Meta:</label>
        @Html.TextAreaFor(m => m.Meta, new { @class = "form-control", style = "word-break: break-word;" })
    </div>
    <div class="form-group">
        <label>Rating:</label>
        @Html.DropDownListFor(n => n.RatingId, new SelectList(Model.PossibleRatings, "Id", "Name"), "Unrated", new { @class = "form-control", style = "word-break: break-word;" })
    </div>
    <input type="submit" />
    <input type="submit" value="Delete" formaction="@Url.Action("Delete", "Upload")" />
</form>